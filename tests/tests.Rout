
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(longpower)
Loading required package: Matrix
Loading required package: lattice
Loading required package: lme4
Loading required package: Rcpp
Loading required package: RcppEigen
Loading required package: nlme

Attaching package: 'nlme'

The following object is masked from 'package:lme4':

    lmList

> 
> n = 3
> t = c(0,2,5)
> u = list(u1 = t, u2 = rep(0,n))
> v = list(v1 = cbind(1,1,rep(0,n)),
+          v2 = cbind(1,0,t))         
> rho = c(0.2, 0.5, 0.8)
> sigma2 = c(100, 200, 300)
> tab = outer(rho, sigma2, 
+       Vectorize(function(rho, sigma2){
+         ceiling(diggle.linear.power(
+           d=0.5,
+           t=t,
+           sigma2=sigma2,
+           R=rho,
+           alternative="one.sided",
+           power=0.80)$n)}))
> colnames(tab) = paste("sigma2 =", sigma2)
> rownames(tab) = paste("rho =", rho)
> tab
          sigma2 = 100 sigma2 = 200 sigma2 = 300
rho = 0.2          313          625          938
rho = 0.5          196          391          586
rho = 0.8           79          157          235
> 
> # reproduce Table 1 from Lu, Luo, & Chen (2008)
> phi1 <- c(rep(1, 6), 2, 2)
> phi2 <- c(1, 1, rep(2, 6))
> lambda <- c(1, 2, sqrt(1/2), 1/2, 1, 2, 1, 2)
> ztest <- ttest1 <- c()
> for(i in 1:8){
+   Na <- (phi1[i] + lambda[i] * phi2[i])*(qnorm(0.05/2) + qnorm(1-0.90))^2*(0.5^-2)
+   Nb <- Na/lambda[i]
+   ztest <- c(ztest, Na + Nb)
+   v <- Na + Nb - 2
+   Na <- (phi1[i] + lambda[i] * phi2[i])*(qt(0.05/2, df = v) + qt(1-0.90, df = v))^2*(0.5^-2)
+   Nb <- Na/lambda[i]
+   ttest1 <- c(ttest1, Na + Nb)
+ }
> data.frame(phi1, phi2, lambda, ztest, ttest1)
  phi1 phi2    lambda    ztest   ttest1
1    1    1 1.0000000 168.1188 170.1476
2    1    1 2.0000000 189.1336 191.1576
3    1    2 0.7071068 244.9670 246.9822
4    1    2 0.5000000 252.1782 254.1925
5    1    2 1.0000000 252.1782 254.1925
6    1    2 2.0000000 315.2227 317.2313
7    2    2 1.0000000 336.2375 338.2447
8    2    2 2.0000000 378.2672 380.2721
> 
> # reproduce Table 2 from Lu, Luo, & Chen (2008)
> tab <- c()
> for(J in c(2,4))
+ for(aJ in (1:4)/10)
+ for(p1J in c(0, c(1, 3, 5, 7, 9)/10)){
+   rJ <- 1-aJ
+   r <- seq(1, rJ, length = J)
+   # p1J = p^(J-1)
+   tab <- c(tab, power.mmrm.ar1(rho = p1J^(1/(J-1)), ra = r, sigmaa = 1,
+     lambda = 1, times = 1:J,
+     delta = 1, sig.level = 0.05, power = 0.80)$phi1)
+ }
> matrix(tab, ncol = 6, byrow = TRUE)
         [,1]     [,2]     [,3]     [,4]     [,5]     [,6]
[1,] 1.111111 1.110000 1.101111 1.083333 1.056667 1.021111
[2,] 1.250000 1.247500 1.227500 1.187500 1.127500 1.047500
[3,] 1.428571 1.424286 1.390000 1.321429 1.218571 1.081429
[4,] 1.666667 1.660000 1.606667 1.500000 1.340000 1.126667
[5,] 1.111111 1.100502 1.082804 1.062830 1.039967 1.014086
[6,] 1.250000 1.224745 1.183929 1.138862 1.087970 1.030895
[7,] 1.428571 1.382542 1.310653 1.233183 1.147022 1.051426
[8,] 1.666667 1.590105 1.474888 1.354053 1.221989 1.077280
> 
> lmmpower(delta=1.5, t = seq(0,1.5,0.25),
+ 	sig2.i = 55, sig2.s = 24, sig2.e = 10, cov.s.i=0.8*sqrt(55)*sqrt(24), power = 0.80)

     Power for longitudinal linear model with random slope (Edland, 2009) 

              n = 207.3101
          delta = 1.5
         sig2.s = 24
         sig2.e = 10
      sig.level = 0.05
              t = 0.00, 0.25, 0.50, 0.75, 1.00, 1.25, 1.50
          power = 0.8
    alternative = two.sided

 NOTE: n is number in *each* group 
> lmmpower(n=208, t = seq(0,1.5,0.25),
+ 	sig2.i = 55, sig2.s = 24, sig2.e = 10, cov.s.i=0.8*sqrt(55)*sqrt(24), power = 0.80)

     Power for longitudinal linear model with random slope (Edland, 2009) 

              n = 208.0006
          delta = 1.497508
         sig2.s = 24
         sig2.e = 10
      sig.level = 0.05
              t = 0.00, 0.25, 0.50, 0.75, 1.00, 1.25, 1.50
          power = 0.8
    alternative = two.sided

 NOTE: n is number in *each* group 
> lmmpower(beta = 5, pct.change = 0.30, t = seq(0,1.5,0.25),
+ 	sig2.i = 55, sig2.s = 24, sig2.e = 10, cov.s.i=0.8*sqrt(55)*sqrt(24), power = 0.80)

     Power for longitudinal linear model with random slope (Edland, 2009) 

              n = 207.3101
          delta = 1.5
         sig2.s = 24
         sig2.e = 10
      sig.level = 0.05
              t = 0.00, 0.25, 0.50, 0.75, 1.00, 1.25, 1.50
          power = 0.8
    alternative = two.sided
           beta = 5

 NOTE: n is number in *each* group 
> 
> library(lme4)
> fm1 <- lmer(Reaction ~ Days + (Days|Subject), sleepstudy)
> lmmpower(fm1, pct.change = 0.30, t = seq(0,9,1), power = 0.80)

     Power for longitudinal linear model with random slope (Edland, 2009) 

              n = 68.47008
          delta = 3.140186
         sig2.s = 35.07177
         sig2.e = 654.9401
      sig.level = 0.05
              t = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
          power = 0.8
    alternative = two.sided
       delta.CI = 2.231278, 4.049094
           Days = 10.46729
        Days CI = 7.437592, 13.496980
           n.CI = 41.1809, 135.6139

 NOTE: n is number in *each* group 
> 
> library(nlme)
> fm2 <- lme(Reaction ~ Days, random=~Days|Subject, sleepstudy)
> lmmpower(fm2, pct.change = 0.30, t = seq(0,9,1), power = 0.80)

     Power for longitudinal linear model with random slope (Edland, 2009) 

              n = 68.46938
          delta = 3.140186
         sig2.s = 35.0713
         sig2.e = 654.9424
      sig.level = 0.05
              t = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
          power = 0.8
    alternative = two.sided
       delta.CI = 2.231282, 4.049089
           Days = 10.46729
        Days CI = 7.437607, 13.496964
           n.CI = 41.18057, 135.61199

 NOTE: n is number in *each* group 
> 
> # random intercept only
> fm3 <- lme(Reaction ~ Days, random=~1|Subject, sleepstudy)
> lmmpower(fm3, pct.change = 0.30, t = seq(0,9,1), power = 0.80)

     Power for longitudinal linear model with random slope (Edland, 2009) 

              n = 18.53322
          delta = 3.140186
         sig2.s = 0
         sig2.e = 960.4566
      sig.level = 0.05
              t = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
          power = 0.8
    alternative = two.sided
       delta.CI = 2.667312, 3.613059
           Days = 10.46729
        Days CI = 8.891041, 12.043531
           n.CI = 13.99946, 25.68702

 NOTE: n is number in *each* group 
> 
> library(gee)
> fm4 <- gee(Reaction ~ Days, id = Subject,
+             data = sleepstudy,
+             corstr = "exchangeable")
Beginning Cgee S-function, @(#) geeformula.q 4.13 98/01/27
running glm to get initial regression estimate
(Intercept)        Days 
  251.40510    10.46729 
> lmmpower(fm4, pct.change = 0.30, t = seq(0,9,1), power = 0.80)

     Longitudinal linear model slope power calculation (Diggle et al 2002, page 29) 

              n = 18.845
          delta = 3.140186
         sigma2 = 1
      sig.level = 0.05
          power = 0.8
    alternative = two.sided
       delta.CI = 2.256887, 4.023485
           Days = 10.46729
        Days CI = 7.522956, 13.411616
           n.CI = 11.47895, 36.48273

 NOTE: n is number in *each* group 

 R:
          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]
 [1,] 2276.694 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080
 [2,] 1300.080 2276.694 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080
 [3,] 1300.080 1300.080 2276.694 1300.080 1300.080 1300.080 1300.080 1300.080
 [4,] 1300.080 1300.080 1300.080 2276.694 1300.080 1300.080 1300.080 1300.080
 [5,] 1300.080 1300.080 1300.080 1300.080 2276.694 1300.080 1300.080 1300.080
 [6,] 1300.080 1300.080 1300.080 1300.080 1300.080 2276.694 1300.080 1300.080
 [7,] 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080 2276.694 1300.080
 [8,] 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080 2276.694
 [9,] 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080
[10,] 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080 1300.080
          [,9]    [,10]
 [1,] 1300.080 1300.080
 [2,] 1300.080 1300.080
 [3,] 1300.080 1300.080
 [4,] 1300.080 1300.080
 [5,] 1300.080 1300.080
 [6,] 1300.080 1300.080
 [7,] 1300.080 1300.080
 [8,] 1300.080 1300.080
 [9,] 2276.694 1300.080
[10,] 1300.080 2276.694

> 
> proc.time()
   user  system elapsed 
  4.937   0.143   5.241 
